{"version":3,"sources":["components/header/index.js","components/header/header.js","components/answers/answers-header/tab/index.js","components/answers/answers-header/tab/tab.js","components/answers/answers-header/index.js","components/answers/answers-header/answers-header.js","components/loading/index.js","components/loading/loading.js","api/api.js","components/question-input-field/index.js","components/question-input-field/question-filed.js","components/answers/answers.js","components/answers/index.js","components/nav/index.js","components/nav/nav.js","components/history/index.js","components/history/history.js","components/help/index.js","components/help/help.js","components/bookmarks/index.js","components/bookmarks/bookmarks.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","Component","Tab","this","props","isCurrent","onClick","showAnotherTab","id","title","AnswersHeader","getAllTabs","tabs","map","substr","currentTabId","Loading","Api","_apiLink","token","localStorage","getItem","Date","now","setItem","query","category_id","data","toString","parseInt","console","log","JSON","stringify","fetch","method","headers","body","res","ok","Error","status","json","text","QuestionInputFiled","api","state","value","formChange","e","setState","target","formSubmit","getAnswer","then","answer","showNewAnswer","preventDefault","document","getElementsByClassName","onSubmit","type","onChange","placeholder","WithLinks","replace","m","link","push","href","length","React","Answers","isLoading","index","findByKey","answerFiled","bookmark","content","userInput","Question","Answer","toggleBookmark","Nav","currentPage","goToAnswers","goToBookmarks","goToHistory","goToHelp","History","getHistory","resp","Help","Bookmarks","getBookmarks","getAllBookmarks","App","answers","val","key","arr","i","tabId","tab_id","current_tab","before","splice","after","openFromBookmark","history","tab","generateUnicueId","answer_data","categoryId","question","cat_title","pageContent","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.31521d9c.chunk.js","sourcesContent":["import Header from \"./header\";\nexport default Header;","import React, {Component} from 'react';\nimport './header.css'\nclass Header extends Component{\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"logo\">\n                    <p>\n                        <i className=\"logo-icon\"></i>\n                        Помогатор\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Header;","import Tab from \"./tab\";\nexport default Tab;","import React, {Component} from 'react';\nimport './tab.css'\n\nclass Tab extends Component{\n    render() {\n        return (\n            <div className={(this.props.isCurrent) ? 'tab active': 'tab'}>\n                <span\n                    onClick={() => this.props.showAnotherTab(this.props.id)}>\n                    {this.props.title}\n                </span>\n            </div>\n        )\n    }\n}\nexport default Tab;","import AnswersHeader from \"./answers-header\";\nexport default AnswersHeader;","import React, {Component} from 'react';\nimport './answers-header.css'\nimport Tab from \"./tab\";\n\nclass AnswersHeader extends Component{\n\n    getAllTabs = () => {\n        return(\n            this.props.tabs.map(({title, id})=>{\n                return(\n                    <Tab\n                        id={id}\n                        title={title.substr(0, 20)}\n                        isCurrent={(this.props.currentTabId===id)}\n                        showAnotherTab={this.props.showAnotherTab}\n                        key={id}/>\n                )\n            })\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"answer-header\">\n                {this.getAllTabs()}\n            </div>\n        )\n    }\n\n};\nexport default AnswersHeader;","import Loading from \"./loading\";\nexport default Loading;","import React, {Component} from 'react';\nimport './loading.css';\n\nclass Loading extends Component{\n\n    render() {\n        return (\n            <div className=\"loading\">\n                <div className=\"icon\"></div>\n            </div>\n        )\n    }\n}\nexport default Loading;","export default class Api{\n\n    constructor() {\n        this._apiLink = \"/api/\"\n        const token = localStorage.getItem('token');\n        if (token){\n            this.token = token\n        }else {\n            this.token = Date.now();\n            localStorage.setItem('token', this.token);\n        }\n    }\n    //\n    // getAllHistory(){\n    //     const response = localStorage.getItem('history');\n    //     return JSON.parse(response)['history'];\n    // }\n\n\n    async getAnswer(query, category_id){\n        const data = {\n            \"sessionId\": this.token.toString(),\n            \"chatId\": 1,\n            \"text\": query,\n            \"categoryId\": parseInt(category_id)\n        };\n        console.log(JSON.stringify(data));\n        const res = await fetch(`${this._apiLink}questions`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'X-Pomogator-Session-Id': this.token.toString()\n\n            },\n            body: JSON.stringify(data)\n        });\n        if (!res.ok){\n            throw new Error(`Fail api ${res.status}`)\n        }\n        return await res.json()\n    }\n\n    async getHistory(){\n        const res = await fetch(`${this._apiLink}history/?take=20`,{\n            method: 'GET',\n            headers: {\n                'X-Pomogator-Session-Id': this.token.toString()\n            },\n        });\n        if (!res.ok){\n            throw new Error(`Fail api ${res.status}`)\n        }\n        console.log(res.text());\n        return await res.json()\n    }\n\n    async getBookmarks(){\n        const res = await fetch(`${this._apiLink}favourites/?take=20`,{\n            method: 'GET',\n            headers: {\n                'X-Pomogator-Session-Id': this.token.toString()\n            }\n        });\n        if (!res.ok){\n            throw new Error(`Fail api ${res.status}`)\n        }\n        console.log(res.text());\n        return await res.json()\n    }\n}","import QuestionInputFiled from \"./question-filed\";\nexport default QuestionInputFiled;","import React, {Component} from 'react';\nimport Api from '../../api/api'\nimport \"./question-filed.css\"\n\nclass QuestionInputFiled extends Component{\n\n    api = new Api();\n\n    state={\n        value: '',\n    }\n\n    formChange= (e) => {\n        this.setState({\n            value: e.target.value\n        })\n    }\n\n    formSubmit = (e) => {\n        //DO IT\n        this.api.getAnswer(this.state.value, this.props.currentTabId).then((answer) => {\n            this.props.showNewAnswer(answer, this.props.currentTabId);\n        });\n        // console.log(answer);\n        e.preventDefault();\n        document.getElementsByClassName(\"main-question-input\")[0].value = \"\";\n    }\n\n    render() {\n        return (\n            <form\n                className=\"main-question\"\n                method=\"GET\"\n                onSubmit={this.formSubmit}>\n                <input type=\"text\" className=\"main-question-input\" onChange={this.formChange} placeholder=\"Введите ваш вопрос\"/>\n                <input type=\"submit\" className=\"text\" value=\"Искать\"/>\n                <input type=\"submit\" className=\"voice\" value=\"\"/>\n            </form>\n        )\n    }\n}\n\nexport default QuestionInputFiled;","import React, {Component} from 'react';\nimport AnswersHeader from \"./answers-header\";\nimport Loading from \"../loading\";\nimport QuestionInputFiled from \"../question-input-field\";\nimport \"./answers.css\"\n\n\nclass WithLinks extends React.Component {\n    render() {\n        var res = []\n\n        this.props.text && this.props.text.replace(/((?:https?:\\/\\/|ftps?:\\/\\/|\\bwww\\.)(?:(?![.,?!;:()]*(?:\\s|$))[^\\s]){2,})|(\\n+|(?:(?!(?:https?:\\/\\/|ftp:\\/\\/|\\bwww\\.)(?:(?![.,?!;:()]*(?:\\s|$))[^\\s]){2,}).)+)/gim, (m, link, text) => {\n            res.push(link ? <a href={(link[0]===\"w\" ? \"//\" : \"\") + link} key={res.length}>{link}</a> : text)\n        })\n\n        return <div className=\"full-answer\">{res}</div>\n    }\n}\n\nclass Answers extends Component{\n\n\n    render() {\n\n        const {currentTabId, isLoading,  tabs} = this.props.data;\n        console.log(this.props.data);\n        const index = this.props.findByKey(currentTabId, 'id', tabs)\n        if (index === -1){\n            console.log(currentTabId);\n            return (\n                <h1>error</h1>\n            )\n        }\n\n        const {content} = tabs[index]\n\n        const userInput = <QuestionInputFiled\n            currentTabId={currentTabId}\n            showNewAnswer={this.props.showNewAnswer}/>\n\n        let answerFiled, bookmark;\n        if (!content){\n            answerFiled = null;\n        }else if (isLoading){\n            answerFiled = <Loading></Loading>\n        }\n        else{\n\n            answerFiled =\n                <div className=\"answer-filed\">\n                    <div className=\"title\">\n                        {content.Question}\n                    </div>\n                    {/*<div className=\"full-answer\">*/}\n                    {/*    {content.Answer}*/}\n                    {/*</div>*/}\n                    <WithLinks text={content.Answer}/>\n                </div>\n\n            if (tabs[index]['inBookmark']){\n                bookmark =\n                    <i\n                        onClick={()=>(this.props.toggleBookmark(tabs[index]['id']))}\n                        className='to-bookmark added'\n                    >\n                        В закладках\n                    </i>\n            }else{\n                bookmark =\n                    <i\n                        onClick={()=>(this.props.toggleBookmark(tabs[index]['id']))}\n                        className='to-bookmark'\n                    >\n                        Добавить в закладки\n                    </i>\n            }\n\n        }\n\n\n        return (\n            <div className=\"answers\">\n                <AnswersHeader\n                    currentTabId = {currentTabId}\n                    tabs={tabs}\n                    showAnotherTab={this.props.showAnotherTab}\n                />\n                {answerFiled}\n                {bookmark}\n                {userInput}\n            </div>\n\n        )\n    }\n}\n\nexport default Answers;","import Answers from \"./answers\";\nexport default Answers;","import Nav from \"./nav\";\nexport default Nav;","import React, {Component} from 'react';\nimport './nav.css'\nclass Nav extends Component{\n    render() {\n        return (\n            <div className=\"nav\">\n                {/*<div className=\"profile\">*/}\n                {/*    <i className=\"profile-avatar\">*/}\n\n                {/*    </i>*/}\n                {/*    <p>И.Иванов</p>*/}\n                {/*</div>*/}\n                <ul className=\"menu\">\n                    <li\n                        className={this.props.currentPage===\"main\" ? \"active\": \"\"}\n                        onClick={this.props.goToAnswers}>\n                        <i className=\"icon home\"></i>\n                        Главная\n                    </li>\n                    <li\n                        className={this.props.currentPage===\"bookmarks\" ? \"active\": \"\"}\n                        onClick={this.props.goToBookmarks}>\n                        <i className=\"icon bookmark\"></i>\n                        Закладки\n                    </li>\n                    <li\n                        className={this.props.currentPage===\"history\" ? \"active\": \"\"}\n                        onClick={this.props.goToHistory}>\n                        <i className=\"icon history-icon\"></i>\n                        История\n                    </li>\n                    <li\n                        onClick={this.props.goToHelp}>\n                        <i className=\"icon how-to\"></i>\n                        Руководство\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\nexport default Nav;","import History from \"./history\";\nexport default History;","import React, {Component} from 'react';\nimport './history.css'\nimport Api from \"../../api/api\";\n\nclass Nav extends Component{\n    api = new Api();\n    getHistory = () => {\n        const all_history = this.api.getHistory().then((resp) => {\n            console.log(resp['history']);\n        });\n        // return all_history.map(({Question})=>{\n        //     return(\n        //         <li>\n        //             {Question}\n        //         </li>\n        //     )\n        // })\n    }\n\n    render() {\n        return (\n            <div className=\"history\">\n                <div className=\"history-header\">\n                    История\n                </div>\n                <ul>\n                    {this.getHistory()}\n                </ul>\n            </div>\n        )\n    }\n}\nexport default Nav;","import Help from \"./help\";\nexport default Help;","import React, {Component} from 'react';\nimport './help.css'\n\nclass Help extends Component{\n\n    render() {\n        return (\n            <div className=\"help\">\n                <div className=\"help-header\">\n                    Руководство\n                </div>\n                <div className=\"help-text\">\n                    <h2>Как пользоваться Помогатором?</h2>\n                    <p>\n                        1. Введите свой вопрос в поле для поиска.\n                    </p>\n                    <p>\n                        2. Уточните вопрос, если вдруг потребуется.\n                    </p>\n                    <p>\n                        3. Если бот нашел правильный вопрос, нажмите на него, чтобы посмотреть ответ :)\n                    </p>\n                    <p>\n                        4. Если совсем не нашел, то мы свяжем вас с оператором.\n                    </p>\n                    <p>\n                        5. Чтобы добавить понравившийся вопрос в закладки, нажмите *добавить в закладки*\n                        (чтобы посмотреть все закладки, нажмите на *закладки* в меню слева).\n                    </p>\n                    <p>\n                        6. Чтобы посмотреть всю историю просмотренных вами вопросов, нажмите на *история* в меню слева.\n                    </p>\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default Help;","import Bookmarks from \"./bookmarks\";\nexport default Bookmarks;","import React, {Component} from 'react';\nimport './bookmarks.css'\nimport Api from '../../api/api'\n\nclass Bookmarks extends Component{\n\n    getBookmarks = () => {\n        const api = new Api();\n        const all_bookmarks = api.getAllBookmarks();\n        return all_bookmarks.map(({Question})=>{\n            return(\n                <li>\n                    {Question}\n                </li>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"history\">\n                <div className=\"history-header\">\n                    Закладки\n                </div>\n                <ul>\n                    {this.getBookmarks()}\n                </ul>\n            </div>\n        )\n    }\n}\nexport default Bookmarks;","import App from \"./app\";\nexport default App;","import React, {Component} from 'react';\nimport Header from \"../header\";\nimport Answers from \"../answers\";\nimport Nav from \"../nav\";\nimport History from \"../history\";\nimport Help from \"../help\";\nimport Bookmarks from \"../bookmarks\";\nimport './app.css'\nimport Api from '../../api/api'\nclass App extends Component{\n\n    state = {\n        answers:{\n            isLoading: false,\n            currentTabId: 1,\n            tabs:[\n                {\n                    'id': 1,\n                    'title': 'Телефон',\n                    'inBookmark': false,\n                    'content': null\n                },\n                {\n                    'id': 2,\n                    'title': 'Интернет',\n                    'inBookmark': false,\n                    'content': null\n                },\n                {\n                    'id': 3,\n                    'title': 'Мобильная связь',\n                    'inBookmark': false,\n                    'content': null\n                },\n                {\n                    'id': 4,\n                    'title': 'Телевидение',\n                    'inBookmark': false,\n                    'content': {\n                        'Question': 'Как включить телевизор?',\n                        'Answer': 'Нажмите на кнопку вкл'\n                    }\n                }\n            ],\n        },\n        currentPage: 'main',\n    }\n\n    api = new Api();\n\n    findByKey = (val, key, arr) => {\n        let index = -1;\n        for (let i=0; i<arr.length; i++) {\n            if (arr[i][key]===val) {\n                index=i\n            }\n        }\n        return index;\n    }\n\n\n    showAnotherTab = (tabId) => {\n        this.setState(\n            {\n                answers:{\n                    // isLoading: true,\n                    currentTabId: tabId,\n                    tabs: this.state.answers.tabs\n                }\n            }\n        );\n    }\n\n    goToHistory = () => {\n        this.setState(\n            {\n                currentPage: 'history',\n            }\n        );\n    }\n\n    goToBookmarks = () => {\n        this.setState(\n            {\n                currentPage: 'bookmarks',\n            }\n        );\n    }\n\n    goToHelp = () => {\n        this.setState(\n            {\n                currentPage: 'help',\n            }\n        );\n    }\n\n    goToAnswers = () => {\n        this.setState(\n            {\n                currentPage: 'main',\n            }\n        );\n    }\n\n    toggleBookmark = (tab_id) => {\n        const tabs = this.state.answers.tabs;\n        const index = this.findByKey(tab_id, 'id', tabs);\n        let current_tab = {...tabs[index]};\n        current_tab['inBookmark'] = !current_tab['inBookmark'];\n        const before = tabs.splice(0, index);\n        const after = tabs.splice(index+1);\n        this.setState(\n            {\n                answers:{\n                    currentTabId: this.state.answers.currentTabId,\n                    tabs: [...before, current_tab, ...after]\n                },\n            }\n        );\n    }\n\n    openFromBookmark = (id) => {\n        const index = this.findByKey(id, 'id', this.state.history);\n        let tab = this.state.history[index];\n        tab.id = this.generateUnicueId(this.state.answers.tabs)\n        this.setState(\n            {\n                currentPage: 'main',\n                answers:{\n                    currentTabId: tab.id,\n                    tabs: [...this.state.answers.tabs, tab]\n                }\n            }\n        );\n    };\n\n    showNewAnswer = (answer_data, categoryId) => {\n        const tabs = this.state.answers.tabs;\n        const {answer, question} = answer_data;\n        console.log(answer, question);\n        const index = this.findByKey(categoryId, 'id', tabs);\n\n        let cat_title;\n        if (categoryId.toString() == '1'){\n            cat_title = \"Телефон\";\n        }else if (categoryId.toString() == '2'){\n            cat_title = \"Интернет\";\n        }else if (categoryId.toString() == '3'){\n            cat_title = \"Мобильная связь\";\n        }else{\n            cat_title = \"Телевидение\";\n        }\n        let current_tab = {\n            'id': categoryId,\n            'title': cat_title,\n            'inBookmark': false,\n            'content': {\n                'Question': question,\n                'Answer': answer\n            }\n        };\n\n        const before = tabs.splice(0, index);\n        let after;\n        if (index != 0){\n            after = tabs.splice(index);\n        }else{\n            after = tabs.splice(index+1);\n        }\n        console.log(before, 'bb');\n        console.log(after, 'af');\n        this.setState(\n            {\n                answers:{\n                    currentTabId: this.state.answers.currentTabId,\n                    tabs: [...before, current_tab, ...after]\n                },\n            }\n        );\n    }\n\n    render() {\n        let pageContent;\n        switch (this.state.currentPage) {\n            case 'main':\n                pageContent =\n                        <Answers\n                            data={this.state.answers}\n                            showAnotherTab={this.showAnotherTab}\n                            toggleBookmark={this.toggleBookmark}\n                            findByKey={this.findByKey}\n                            showNewAnswer={this.showNewAnswer}\n                        />\n                break;\n            case 'bookmarks':\n                pageContent = <Bookmarks/>\n                break;\n            case 'history':\n                pageContent = <History/>\n                break;\n            case 'help':\n                pageContent = <Help/>\n                break;\n            default:\n                pageContent = <h1>ERROR</h1>;\n        }\n\n        return (\n            <div className=\"main\">\n                <div className=\"left-part\">\n                    <Header/>\n                    <Nav\n                        currentPage={this.state.currentPage}\n                        goToAnswers={this.goToAnswers}\n                        goToHistory={this.goToHistory}\n                        goToBookmarks={this.goToBookmarks}\n                        goToHelp={this.goToHelp}/>\n                </div>\n                <div className=\"right-part\">\n                    {pageContent}\n                </div>\n\n            </div>\n        )\n    }\n\n};\nexport default App;"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}